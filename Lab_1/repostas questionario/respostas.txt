EXERCICIO 1

1 -
main    MOV R1, #0x4567
        MOVT R1, #0x0123
        
        MOV R0, #0xCDEF
        MOVT R0, #0x89AB
        
        MOV R3, #0xCBA9
        MOVT R3, #0x0FED
        
        MOV R2, #0x4321
        MOVT R2, #0x8765
        
        ADDS R0, R0, R2
        ADC  R1, R1, R3
        
3 - apos a soma de r0 com r3 a flag de carry e sao incrementadas de 1

4 -
a) o sistema nao quebra mas por nao ter flags no comando add fica com o valor de 1 em hexadecilmal a manos na resposta da soma
de r1 com r3

b) A primeira soma continuou gerando flag, porem a segunda soma apenas soma sem levar em consideração os flags do ambiente

c) a primeira soma usou as flags que estavam no ambiente no momento, que eram todas zeros e a segunda fez uma flag 
que poderia gerar flag no ambiente caso necessario

5 - a primeira

6 - sim, totalmente ... isso se comprova pelo item 4-c

EXERCICIO 2

1 - main    MOV R1, #0x4567
        MOVT R1, #0x0123
        
        MOV R0, #0xCDEF
        MOVT R0, #0x89AB
        
        MOV R3, #0xCBA9
        MOVT R3, #0x0FED
        
        MOV R2, #0x4321
        MOVT R2, #0x8765
        
        SUBS R0, R0, R2
        SBC  R1, R1, R3
		
2 - nao indica pois o comando sbc apenas utiliza flags que estao no ambiante, ela nao as altera

3 - Sim, agr sim ele altera os valores das flags que estao setandas no ambiente, no caso ele tira o de carry
e coloca 1 em negativo

EXERCICIO - 3

main    MOV R1, #0x4567
        MOVT R1, #0x0123
        
        MOV R0, #0xCDEF
        MOVT R0, #0x89AB
        
        MOV R3, #0xCBA9
        MOVT R3, #0x0FED
        
        MOV R2, #0x4321
        MOVT R2, #0x8765
        
        ADD R0, R0, R0, LSL #2       -> MULTIPLICA POR 5 SIM
        RSB R1, R1, R1, LSL #4		 -> nao faz isso nao







###################  QUESTIONARIO  ###################  

- CODIGO DO QUESTIUONARIO
main
        MOV R0, #0x0123
        MOV R1, #0x0123
        MOV R2, #0x002
        MOV R3, #0x003
        MOV R4, #0x004
        MOV R5, #0x011

        
        ;;ADD R0, R0, R1, LSL #4
        ADD R0, R0, R0, LSL #4
        MUL R2, R1, R2
        MUL R3, R1, R3
        MUL R4, R1, R4
        MUL R5, R1, R5

- CODIGO ULTIMO EX

main
        MOV R0, #0
        MOV R1, #10
repete
        ADD R0, R0, #2
        SUB R1, R1, #1
        CBZ R1, fim
        B repete
fim
        B main


	-> a resposta de como arrumar o cod 
	
			Primeiramente o código deve ser lido/debugado desde a primeira linha manualmente com o objetivo
		de encontrar qualquer possível falha de nomenclatura.
		Começando pelo main:
		
			- R0:= 0
			- R1:= 10
			
		Até esse ponto não houve nenhum problema; R0 tem o valor de 0 e R1 tem o valor de 10, ambos os valores
		em decimal.
			Seguindo para o loop ou repete: Neste ponto, lendo o código deu a entender que o estudante tinha o objetivo
		de fazer um loop que subtraia o valor de R1 até zero e incremente o valor de R0 simultaneamente, além disso
		esse loop deveria parar quando o valor de R1 finalmente chegasse a zero. O modo como ele realizou as operações
		está correto, os valores de R1 e R0 serão alterados como o desejado. Porém podemos citar 2 erros ao "chegar" no comando de
		
			- CBNZ R1, repete
		
		O primeiro é que o comando CBNZ compara se o valor de R1 é diferente de zero e não
		igual a zero, logo, no primeiro ciclo/iteração já finalizaria o loop. O segundo erro é que o mesmo comando não
		pode passar o endereço de memória de <label> para PC se o mesmo estiver para "trás", sendo assim, o estudante 
		deveria usar o comando:
		
			;; CBZ Rn, <label> ;; 0<= n <=7 
			- CBZ R1, fim
			
		Com isso, se R1 for igual a zero, assim que ele chegar na linha escrita acima o endereço de memória atribuído a
		PC será o endereço de memória de <label> (próxima instrução a ser executada) e isso fará com que o loop seja 
		"interrompido". E como fazer para que o loop continue caso a condição de R1 não seja atendida? Para isso é 
		adicionado o comando:
		
			- B repete
			
		ao final do loop/repete. Logo, se o valor de PC não for atribuído pelo comando CBZ, o mesmo voltará para "repete".
		E por último o trecho de fim: Nesse pedaço aqui não tem muito o que comentar pois está tudo certo. Uma coisa legal 
		de citar é de que caso o aluno queira que o código volte ao início, no main, bastaria ele trocar o trecho 
		de código:
		
			- B fim
			
		por:
		
			- B main

		




















